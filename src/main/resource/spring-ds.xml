<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="connectionProperties" value="${ds.connectionProperties}" />
		<property name="url" value="${ds.jdbcUrl}" />
		<property name="username" value="${ds.user}" />
		<property name="password" value="${ds.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${ds.initialSize}" />
		<property name="minIdle" value="${ds.minIdle}" />
		<property name="maxActive" value="${ds.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${ds.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${ds.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${ds.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${ds.validationQuery}" />
		<property name="testWhileIdle" value="${ds.testWhileIdle}" />
		<property name="testOnBorrow" value="${ds.testOnBorrow}" />
		<property name="testOnReturn" value="${ds.testOnReturn}" />

		<property name="filters" value="${ds.filters}" />
	</bean>

	<bean id="dataSource" class="com.howbuy.ftxconsole.dao.dataSource.CustomerRoutingDataSource">
		<!-- 这个targetDataSource是必须要注入的 -->
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="MASTER" value-ref="masterDataSource" />
			</map>
		</property>
		<!-- 默认的数据源 -->
		<property name="defaultTargetDataSource" ref="masterDataSource" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

</beans>